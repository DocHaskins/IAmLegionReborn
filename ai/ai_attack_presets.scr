//DEFAULT VALUES:
//Type("NONE")
//Hand("NONE")
//Severity("NONE")
//Pattern("NONE")
//Direction("NONE")
//Followup("NONE")
//Style("NONE")
//TargetType("NONE")
//DamageElemCalculation("SIMPLE")
//DamageType("UNKNOWN")
//MoveLimit("true")
//DamageReactionFlagInterrupt("false")
//BlockMoveLimitOnNavi("false")
//CanDamageAllies("false")
//EnableVerticalChecks("false")
//ForceForwardDir("false")
//UseWeapon("false")
//ImpactDirCalculation("PRECISE")
//UseXZOnlyForPosCorrection("false")
//DamageBoxWidth("-1.0")
//ConeAngle("-1.0")
//VerticalRange("0")
//AdditionalRange("-1.0")
//RangeOffsetEachSecond(0.0)
//PosCorrectionOffset("0 0 0")
//DamageCooldown("-1.0")
//MaxNonMainTargetsHit(UINT_MAX)
//SyncActionGroupName("")
//DamagePreset("")

sub main()
{
    //BANSHEE
    AttackPreset("banshee_power_jump_on_biter")
    {
        Type("PUSH_ALLY");
        Severity("LIGHT");
        CanDamageAllies("true");
        SyncActionGroupName("BansheeJumpOnBiter");
        PosCorrectionOffset("0 1.8 0");
        DamagePreset("banshee_light@ai_damage_presets.scr");
        UseXZOnlyForPosCorrection("false");
        MoveLimit("false");
    }
    AttackPreset("banshee_jump_between_biters")
    {
        Type("JUMP_AWAY");
        Severity("HEAVY");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        ForceForwardDir("true");
		SyncActionGroupName("BansheeJumpOnBiter");
        ImpactDirCalculation("FROM_TARGET_TO_MAIN_TARGET");
        ConeAngle("179.9");
        VerticalRange("2.5");
        AdditionalRange("0.2");
		PosCorrectionOffset("0 2.0 0");
        DamagePreset("banshee_jump_off_biter@ai_damage_presets.scr");
        MoveLimit("false");
    }
    AttackPreset("banshee_jump_off_biter")
    {
        Type("PUSH_ALLY");
        Severity("HEAVY");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        ForceForwardDir("true");
        ImpactDirCalculation("FROM_TARGET_TO_MAIN_TARGET");
        ConeAngle("179.9");
        VerticalRange("2.5");
        AdditionalRange("0.2");
        DamagePreset("banshee_jump_off_biter@ai_damage_presets.scr");
        MoveLimit("false");
    }
	AttackPreset("banshee_jump_from_ledge")
    {
        Type("VEHICLE_JUMP_STRIKE_FROM_STAND");
        Severity("HEAVY");
        EnableVerticalChecks("true");
        ForceForwardDir("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("179.9");
        PosCorrectionOffset("0 0 -1");
        ConeAngle("179.9");
        VerticalRange("2.0");
        AdditionalRange("1.5");
        DamagePreset("banshee_light@ai_damage_presets.scr");
    }
    AttackPreset("banshee_jump_strike")
    {
        Type("JUMP_STRIKE_FROM_STAND");
        Severity("HEAVY");
        EnableVerticalChecks("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        PosCorrectionOffset("0 0 -1");
        ConeAngle("179.9");
        VerticalRange("2.0");
        AdditionalRange("1.5");
        
    }
    AttackPreset("banshee_landing_hit")
    {
        Type("ATTACK_HIT");
        Severity("LIGHT");
        DamagePreset("banshee_light@ai_damage_presets.scr");
    }
    AttackPreset("banshee_landing_miss")
    {
        Type("ATTACK_MISSED");
        Severity("LIGHT");
        DamagePreset("banshee_light@ai_damage_presets.scr");
		MoveLimit("false");
    }
    AttackPreset("banshee_attack_jump_low")
    {
        Type("JUMP_ATTACK_FROM_MOVE");
        Severity("LIGHT");
        EnableVerticalChecks("true");
        UseWeapon("true");
		ForceForwardDir("true");
        ConeAngle("20");
        VerticalRange("0.05");
        AdditionalRange("1.35");
        MoveLimit("false");	
		DamageReactionFlagInterrupt("true");
    }
	AttackPreset("banshee_attack_running_low_start")
    {
        Type("CHARGE_START");
        DamageType("LOW_SLASH");
        Severity("HEAVY");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("30");
        VerticalRange("0.05");
        AdditionalRange("1.25");
		PosCorrectionOffset("-1.0 0.0 0");
        MoveLimit("false");
    }
	AttackPreset("banshee_attack_running_low")
    {
        Type("CHARGE");
        DamageType("LOW_SLASH");
        Severity("HEAVY");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("40");
        VerticalRange("0.05");
        AdditionalRange("1.25");
		PosCorrectionOffset("-1.0 0.0 0");
        MoveLimit("false");
    }
	AttackPreset("banshee_attack_running_low_end")
    {
        Type("CHARGE_END");
        DamageType("LOW_SLASH");
        Severity("HEAVY");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("30");
        VerticalRange("0.05");
        AdditionalRange("1.25");
        MoveLimit("false");
    }
    AttackPreset("banshee_attack_from_ground")
    {
        Type("CRAWL_ATTACK");
        DamageType("LOW_SLASH");
        Severity("LIGHT");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("30");
        VerticalRange("0.05");
        AdditionalRange("0.75");
        MoveLimit("false");
    }
    // BOLTER
    AttackPreset("bolter_push")
    {
        Type("PUSH");
        Severity("HEAVY");
        MoveLimit("false");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamagePreset("gentle_push@ai_damage_presets.scr");
    }
    AttackPreset("bolter_push_allies")
    {
        Type("PUSH_ALLY");
        Severity("LIGHT");
        MoveLimit("false");
        CanDamageAllies("true");
        UseWeapon("true");
		DamagePreset("gentle_push@ai_damage_presets.scr");
    }
    //BITER
    AttackPreset("biter_crawl")
    {
        Type("CRAWL_ATTACK");
        Severity("LIGHT");
        MoveLimit("false");
        UseWeapon("true");
        ConeAngle("20");
        AdditionalRange("0.5");
    }
    AttackPreset("biter_crawl_with_grab")
    {
        Type("CRAWL_ATTACK");
        Severity("LIGHT");
        MoveLimit("false");
        SyncActionGroupName("CrawlingBiterGrab");
        UseWeapon("true");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("biter_crawl_charge")
    {
        Type("CRAWL_ATTACK_CHARGE");
        Severity("LIGHT");
        MoveLimit("false");
        UseWeapon("true");
        ConeAngle("20");
        AdditionalRange("0.5");
    }
    AttackPreset("biter_stand_grab")
    {
        Type("GRAB_FROM_STAND");
        Severity("LIGHT");
        MoveLimit("false");
        UseWeapon("true");
        ConeAngle("20");
        AdditionalRange("0.5");
        SyncActionGroupName("BiterGrab");
        UseWeapon("true");
        DamagePreset("biter_tar_hit@ai_damage_presets.scr");
        DamageCooldown("1.5");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("biter_tar_swing")
    {
        Type("GRAB_HANDS_STRETCHED");
        Severity("LIGHT");
        MoveLimit("false");
        UseWeapon("true");
        ConeAngle("20");
        AdditionalRange("0.5");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamagePreset("biter_tar_hit@ai_damage_presets.scr");
        DamageCooldown("1.5");
    }
	AttackPreset("biter_tar_swing_vs_run")
    {
        Type("GRAB_HANDS_STRETCHED");
        Severity("LIGHT");
        MoveLimit("false");
        ConeAngle("20");
        UseWeapon("true");
        AdditionalRange("0.75");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamagePreset("biter_tar_hit@ai_damage_presets.scr");
        DamageCooldown("1.5");
    }
    AttackPreset("biter_tar_miss")
    {
        Type("ATTACK_MISSED");
        Severity("LIGHT");
        MoveLimit("false");
        ConeAngle("20");
        UseWeapon("true");
        AdditionalRange("0.5");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamagePreset("biter_tar_hit@ai_damage_presets.scr");
        DamageCooldown("1.5");
    }
    AttackPreset("biter_tar_swing_upper_body")
    {
        Type("GRAB_WITH_ATTACK");
        Severity("LIGHT");
        MoveLimit("false");
        ConeAngle("20");
        UseWeapon("true");
        AdditionalRange("0.5");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamagePreset("biter_tar_hit@ai_damage_presets.scr");
        DamageCooldown("1.5");
    }
    AttackPreset("biter_charge_swing")
    {
        Type("CHARGE_SWING");
        Severity("HEAVY");
        MoveLimit("false");
		ForceForwardDir("true");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
    }
    AttackPreset("biter_charge")
    {
        Type("CHARGE_START");
        Severity("HEAVY");
        MoveLimit("false");
		ForceForwardDir("true");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
    }
    AttackPreset("biter_light_attack")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        MoveLimit("false");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
		DamageReactionFlagInterrupt("true");
		AdditionalRange("0.5");
    }
    AttackPreset("biter_power_attack")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        MoveLimit("false");
		ForceForwardDir("true");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
    }
    AttackPreset("biter_reaction")
    {
        Type("GRAB");
        Severity("LIGHT");
        MoveLimit("false");
        SyncActionGroupName("BiterGrab");
        UseWeapon("true");
        DamageReactionFlagInterrupt("true");
    }
    //CHARGER
    AttackPreset("charger_counter")
    {
        Type("COUNTER");
        Severity("HEAVY");
        MoveLimit("false");
        CanDamageAllies("true");
        ForceForwardDir("true");
        ConeAngle("40");
        DamagePreset("charger_heavy@ai_damage_presets.scr");
    }
    AttackPreset("charger_push")
    {
        Type("PUSH");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("90");
        AdditionalRange("0.9");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }   
    AttackPreset("charger_bounce_stop")
    {
        Type("CHARGE_BOUNCE");
        Severity("HEAVY");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("0.9");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }
    AttackPreset("charger_charge_start")
    {
        Type("CHARGE_START");
        Severity("HEAVY");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("0.9");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }
     AttackPreset("charger_charge_start_no_space")
    {
        Type("CHARGE_START_IN_PLACE");
        Severity("HEAVY");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("0.9");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }
      AttackPreset("charger_charge_start_fast")
    {
        Type("CHARGE_START_FAST");
        Severity("HEAVY");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("0.9");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }
    AttackPreset("charger_charge_quick_start")
    {
        Type("CHARGE_TURN");
        Severity("HEAVY");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("0.9");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }
    AttackPreset("charger_charge")
    {
        Type("CHARGE");
        Severity("HEAVY");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("40");
        AdditionalRange("0.9");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }
    AttackPreset("charger_charge_end")
    {
        Type("CHARGE_END");
        Severity("HEAVY");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("0.9");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }
    AttackPreset("charger_recharge")
    {
        Type("EXHAUSTED");
        Severity("HEAVY");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("0.9");
        DamageBoxWidth("1");
        DamageCooldown("666");
    }
    //CORRUPTOR
	AttackPreset("corruptor_scream")
    {
        Type("SCREAM");
        Severity("LIGHT");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("4.0");
		EnableVerticalChecks("true");
		ImpactDirCalculation("TOWARDS_TARGET");
        ForceForwardDir("true");
        VerticalRange("1.0");
		DamagePreset("charger_heavy@ai_damage_presets.scr");
    }
    AttackPreset("corruptor_stomp")
    {
        Type("STOMP_ATTEMPT");
        Severity("HEAVY");
        MoveLimit("false");		
        DamageReactionFlagInterrupt("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
		ForceForwardDir("true");
        ConeAngle("179");
        VerticalRange("0.4");
        AdditionalRange("2.5");
    }
    AttackPreset("corruptor_360")
    {
        Type("AOE");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ConeAngle("40");
        VerticalRange("1.5");
		ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.5");
    }
    AttackPreset("corruptor_recovery")
    {
        Type("MELEE_RECOVERY");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ConeAngle("40");
        AdditionalRange("1");
		DamagePreset("charger_heavy@ai_damage_presets.scr");
		
    }
    AttackPreset("corruptor_horizontal")
    {
        Type("HORIZONTAL_ATTACK");
        Severity("LIGHT");
        DamageReactionFlagInterrupt("true");
        EnableVerticalChecks("false");
        UseWeapon("true");
        ConeAngle("40");
        VerticalRange("1.5");
        AdditionalRange("1");
        ImpactDirCalculation("TOWARDS_TARGET");
    }
    AttackPreset("corruptor_vertical")
    {
        Type("VERTICAL_ATTACK");
        Severity("LIGHT");
        DamageReactionFlagInterrupt("true");
        EnableVerticalChecks("false");
        UseWeapon("true");
        ConeAngle("40");
        VerticalRange("1.5");
        AdditionalRange("1");
        ImpactDirCalculation("TOWARDS_TARGET");
    }
    AttackPreset("corruptor_push")
    {
        Type("PUSH");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ForceForwardDir("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.4");
        DamageBoxWidth("1.25");
        DamageCooldown("666");
    }
    //DEMOLISHER
    AttackPreset("demolisher_shockwave")
    {
        Type("SHOCKWAVE");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        VerticalRange("1.0");
        RangeOffsetEachSecond("20");
        AdditionalRange("1");
        ImpactDirCalculation("TOWARDS_TARGET");
        ForceForwardDir("true");
        DamageBoxWidth("2.0");
        DamageCooldown("666");
    }
    AttackPreset("demolisher_slam")
    {
        Type("ATTACK_ROUND");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("359.9");
        VerticalRange("0.35");
        AdditionalRange("6");
        ImpactDirCalculation("TOWARDS_TARGET");
        ForceForwardDir("true");
    }
    AttackPreset("demolisher_throw_zombie")
    {
        Type("THROW_ZOMBIE");
        DamageType("THROWN_BY_DEMOLISHER");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("true");
        ConeAngle("20");
        AdditionalRange("2");
        ImpactDirCalculation("FROM_TARGET_TO_MAIN_TARGET");
        MaxNonMainTargetsHit("1");
    }
    AttackPreset("demolisher_horizontal")
    {
        Type("HORIZONTAL_ATTACK");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("40");
        VerticalRange("1.0");
        AdditionalRange("2");
        ImpactDirCalculation("TOWARDS_TARGET");
    }
    AttackPreset("demolisher_vertical")
    {
        Type("VERTICAL_ATTACK");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("40");
        VerticalRange("1.0");
        AdditionalRange("2");
        ImpactDirCalculation("TOWARDS_TARGET");
    }
    AttackPreset("demolisher_360")
    {
        Type("AOE");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("true");
        ConeAngle("40");
        AdditionalRange("1");
    }
    AttackPreset("demolisher_charge_start")
    {
        Type("CHARGE_START");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("1.5");
        DamageBoxWidth("1.75");
        DamageCooldown("666");
		MoveLimit("false");
		BlockMoveLimitOnNavi("true");
    }
    AttackPreset("demolisher_charge_quick_start")
    {
        Type("CHARGE_QUICK_START");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("1.5");
        DamageBoxWidth("1.75");
        DamageCooldown("666");
		MoveLimit("false");
		BlockMoveLimitOnNavi("true");
    }
    AttackPreset("demolisher_charge")
    {
        Type("CHARGE");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("40");
        AdditionalRange("1.5");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamageBoxWidth("1.75");
        DamageCooldown("666");
		MoveLimit("false");
		BlockMoveLimitOnNavi("true");
    }
    AttackPreset("demolisher_charge_end")
    {
        Type("CHARGE_END");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("90");
        AdditionalRange("1.5");
        DamageBoxWidth("1.75");
        DamageCooldown("666");
		MoveLimit("false");
		BlockMoveLimitOnNavi("true");
    }
    AttackPreset("demolisher_charge_swing")
    {
        Type("CHARGE_SWING");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("30");
        AdditionalRange("1.5");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamageBoxWidth("1.75");
        DamageCooldown("666");
		MoveLimit("false");
		BlockMoveLimitOnNavi("true");
    }
    AttackPreset("demolisher_recover_from_stun")
    {
        Type("MELEE_RECOVERY");
        Severity("HEAVY");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("true");
        ConeAngle("30");
        AdditionalRange("1");
        ImpactDirCalculation("TOWARDS_TARGET");
    }
    //GOON
    AttackPreset("goon_aoe")
    {
        Type("AOE");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        VerticalRange("0.75");
        AdditionalRange("2.2");
    }
    AttackPreset("goon_horizontal_attack")
    {
        Type("MELEE_WEAPON");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        VerticalRange("1.4");
        AdditionalRange("3.2");
    }
    AttackPreset("goon_light_attack")
    {
        Type("LEFT_ARM_STRIKE");
		Hand("LEFT");
        Severity("HEAVY");
        MoveLimit("false");
		DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
		UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.25");
    }
    AttackPreset("goon_vertical_behind")
    {
        Type("MELEE_RECOVERY");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamageBoxWidth("1.5");
        AdditionalRange("3.5");
    }
    AttackPreset("goon_vertical_attack")
    {
        Type("USE_WEAPON");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamageBoxWidth("1.5");
        RangeOffsetEachSecond("20");
        AdditionalRange("1.0");
    }
    AttackPreset("goon_stomp")
    {
        Type("STOMP_ATTEMPT");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("false");
        DamageType("BLAST_SPECIAL");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("179");
        VerticalRange("0.2");
        AdditionalRange("2.5");
    }
    //HUMAN_GENERIC
    AttackPreset("human_finisher")
    {
        Type("FINISHER");
        Severity("LIGHT");
        Pattern("SINGLE");
        MoveLimit("false");
        SyncActionGroupName("attack_finisher_sync_action_group");
        DamagePreset("gentle_push@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_grab")
    {
        Type("GRAB");
        Severity("LIGHT");
        Pattern("SINGLE");
        MoveLimit("false");
        SyncActionGroupName("HumanHeadbutt");
        DamagePreset("gentle_push@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_push")
    {
        Type("PUSH");
        Severity("LIGHT");
        Pattern("SINGLE");
        MoveLimit("false");
        UseWeapon("false");
        ForceForwardDir("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("20");
        DamagePreset("gentle_push@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_shiv")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        MoveLimit("false");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_tackle")
    {
        Type("CHARGE");
        Severity("LIGHT");
        Pattern("SINGLE");
        MoveLimit("false");
        SyncActionGroupName("attack_tacke_sync_action_group");
        DamagePreset("gentle_push@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_keep_distance")
    {
        Type("PUSH");
        Severity("LIGHT");
        Pattern("SINGLE");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamagePreset("gentle_push@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_reaction_counter")
    {
        Type("COUNTER");
        Severity("LIGHT");
        Pattern("SINGLE");
        MoveLimit("false");
        UseWeapon("true");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_fury")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("FURY");
        DamageReactionFlagInterrupt("true");
        DamageModifier("AI_Human_FuryComboAttackDamageMul");
    }
    AttackPreset("human_fury_charge")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("COMBO");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("FURY");
        CanDamageAllies("true");
        DamageReactionFlagInterrupt("true");
        DamageModifier("AI_Human_FuryComboAttackDamageMul");
    }
    AttackPreset("human_ai")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("AGGRESSIVE");
        TargetType("AI");
        AdditionalRange("0");
        DamageReactionFlagInterrupt("true"); // to test
    }
    AttackPreset("human_trade_light")
    {
        Type("TRADE");
        Severity("LIGHT");
        Pattern("SINGLE");
        Style("AGGRESSIVE");
        MoveLimit("false");
        UseWeapon("true");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_trade_heavy")
    {
        Type("TRADE");
        Severity("HEAVY");
        Pattern("SINGLE");
        Style("AGGRESSIVE");
        MoveLimit("false");
        UseWeapon("true");
        DamageReactionFlagInterrupt("true");
    }
    //HUMAN_1H
    AttackPreset("human_1h_power_combo")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        Pattern("SINGLE");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("AGGRESSIVE");
    }
    AttackPreset("human_1h_power_cautious")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        Pattern("SINGLE");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        ConeAngle("25");
        Style("CAUTIOUS");
    }
    AttackPreset("human_1h_blind")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        Followup("DODGE");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("CAUTIOUS");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_1h_escape")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("CAUTIOUS");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_1h_fake")
    {
        Type("FAKE");
        DamagePreset("gentle_push@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_1h_scare")
    {
        Type("SCARE_AWAY");
        Severity("LIGHT");
        Pattern("SINGLE");
        UseWeapon("true");
        AdditionalRange("0.6");
        Style("CAUTIOUS");
        DamageReactionFlagInterrupt("true");
        DamageModifier("AI_Human_ScareAwayAttackDamageMul");
    }
    AttackPreset("human_1h_step")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("AGGRESSIVE");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_1h_aggressive")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("AGGRESSIVE");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_1h_combo")
    {
        Type("MELEE_WEAPON");
        Pattern("COMBO");
        DamageReactionFlagInterrupt("true");
        DamageModifier("AI_Human_ComboAttackDamageMul");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("AGGRESSIVE");
    }
    AttackPreset("human_1h_power_aggressive")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        Pattern("SINGLE");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        ConeAngle("25");
        Style("AGGRESSIVE");
    }
    AttackPreset("human_1h_cautious")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("CAUTIOUS");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_1h_block_push")
    {
        Type("PUSH");
        Severity("LIGHT");
        Pattern("SINGLE");
        Followup("BLOCK");
        MoveLimit("false");
        UseWeapon("false");
        ForceForwardDir("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("20");
        DamagePreset("gentle_push@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_1h_block_attack")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        Followup("BLOCK");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
        Style("AGGRESSIVE");
        DamageReactionFlagInterrupt("true");
    }
    //HUMAN_2H
    AttackPreset("human_2h_charge")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        Pattern("COMBO");
        Direction("FORWARD");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("20");
    }
    AttackPreset("human_2h_recovery_combo")
    {
        Type("MELEE_WEAPON");
        Hand("RIGHT");
        Severity("HEAVY");
        Pattern("COMBO");
        Direction("VERTICAL");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("20");
    }
    AttackPreset("human_2h_swing_combo")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        Pattern("COMBO");
        Direction("HORIZONTAL");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("20");
    }
    AttackPreset("human_2h_360")
    {
        Type("AOE");
        Severity("HEAVY");
        Pattern("SINGLE");
        Direction("HORIZONTAL");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("20");
        AdditionalRange("2");
    }
    //HUMAN_SPEAR
    AttackPreset("human_spear_power_combo")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        Pattern("COMBO");
        DamageReactionFlagInterrupt("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.5");
    }
    AttackPreset("human_spear_quick_combo")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("COMBO");
        ForceForwardDir("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.5");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_spear_swipe")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        Pattern("SINGLE");
        Followup("HIT_REACTION");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.5");
        DamagePreset("spear_swipe@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_spear_swipe_low")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        Pattern("SINGLE");
        Followup("HIT_REACTION");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        VerticalRange("0.2");
        AdditionalRange("1.5");
        DamagePreset("spear_swipe_heavy@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    AttackPreset("human_spear_push")
    {
        Type("PUSH");
        Severity("LIGHT");
        Pattern("SINGLE");
        MoveLimit("false");
        UseWeapon("true");
        ForceForwardDir("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.5");
        DamagePreset("heavy_push@ai_damage_presets.scr");
        DamageReactionFlagInterrupt("true");
    }
    //HUMAN_GRENADIER
    AttackPreset("human_molotov_spit") // drink and flush
    {
        Type("SPIT");
        Severity("LIGHT");
        Pattern("SINGLE");
        MoveLimit("false");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("30");
        AdditionalRange("5");
    }
    AttackPreset("human_molotov_spit_horizontal")
    {
        Type("SPIT");
        Severity("LIGHT");
        Pattern("SINGLE");
        Direction("HORIZONTAL");
        MoveLimit("false");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("30");
        AdditionalRange("5");
        DamagePreset("molotov_spit@ai_damage_presets.scr");
    }
    AttackPreset("human_molotov_spit_forward")
    {
        Type("SPIT");
        Severity("LIGHT");
        Pattern("SINGLE");
        Direction("FORWARD");
        MoveLimit("false");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("30");
        AdditionalRange("5");
        DamagePreset("molotov_spit@ai_damage_presets.scr");
    }
    
    //SCREAMER
    AttackPreset("screamer_push")
    {
        Type("PUSH");
        Severity("LIGHT");
        MoveLimit("false");
        ImpactDirCalculation("TOWARDS_TARGET");
		ForceForwardDir("true");
        DamagePreset("gentle_push@ai_damage_presets.scr");
    }
    AttackPreset("screamer_scream")
    {
        Type("SCREAM");
        Severity("LIGHT");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("45");
        AdditionalRange("8");
    }
	AttackPreset("summon_without_damage")
    {
        Type("SCREAM");
        Severity("LIGHT");
    }
	AttackPreset("summon_with_damage")
    {
        Type("SCREAM");
        Severity("LIGHT");
        ForceForwardDir("true");
        UseWeapon("true");
        ConeAngle("45");
        AdditionalRange("3.5");
		EnableVerticalChecks("true");
        ForceForwardDir("true");
        VerticalRange("1.0");
    }
    //SPITTER
    AttackPreset("spitter_push")
    {
        Type("PUSH");
        Severity("LIGHT");
        MoveLimit("false");
        ImpactDirCalculation("TOWARDS_TARGET");
		ForceForwardDir("true");
        DamagePreset("gentle_push@ai_damage_presets.scr");
    }
    //SUICIDER
    AttackPreset("suicider_explode")
    {
        Type("EXPLODE");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
    }
    //VIRAL
    AttackPreset("viral_pursuit")
    {
        Type("PURSUIT_FAST");
        Severity("LIGHT");
        UseWeapon("true");
        UseXZOnlyForPosCorrection("true");
        ConeAngle("15");
        AdditionalRange("1");
    }
    AttackPreset("viral_from_move")
    {
        Type("ATTACK_FROM_MOVE");
        Severity("LIGHT");
        UseWeapon("true");
    }
    AttackPreset("viral_finisher")
    {
        Type("FINISHER");
        Severity("LIGHT");
        UseWeapon("true");
    }
    AttackPreset("viral_light_attack")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
    }
    AttackPreset("viral_from_move_heavy")
    {
        Type("ATTACK_FROM_MOVE");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        SyncActionGroupName("ViralAttackPower");
        UseWeapon("true");
    }
    AttackPreset("viral_grab_short")
    {
        Type("GRAB_FROM_STAND");
        Severity("LIGHT");
        SyncActionGroupName("ViralGrabShimmyShort");
        UseWeapon("true");
    }
    AttackPreset("viral_grab_long")
    {
        Type("GRAB_FROM_STAND");
        Severity("LIGHT");
        SyncActionGroupName("ViralGrabShimmy");
        UseWeapon("true");
    }
    AttackPreset("viral_push_allies")
    {
        Type("PUSH_ALLY");
        Severity("LIGHT");
        MoveLimit("false");
        CanDamageAllies("true");
        UseWeapon("false");
		DamagePreset("gentle_push_no_damage@ai_damage_presets.scr");
    }
    AttackPreset("viral_biter_attack_object")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
    }
	// VOLATILE
	AttackPreset("volatile_light_attack")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        UseWeapon("true");
        ImpactDirCalculation("SNAPPED");
		DamageReactionFlagInterrupt("true");
    }
	AttackPreset("volatile_pursuit")
    {
        Type("PURSUIT_FAST");
        Severity("LIGHT");
        UseWeapon("true");
        UseXZOnlyForPosCorrection("true");
        ConeAngle("15");
        AdditionalRange("1");		
    }		
    AttackPreset("volatile_combo_end")
    {
        Type("FINISHER");
        Severity("HEAVY");
        UseWeapon("true");
		DamageReactionFlagInterrupt("true");
    }
	
	AttackPreset("volatile_power_attack")
    {
        Type("JUMP_STRIKE_FROM_STAND");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
		ConeAngle("30");
		ForceForwardDir("true");
		AdditionalRange("1");
    }
    AttackPreset("volatile_recovery_attack")
    {
        Type("MELEE_RECOVERY");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        UseWeapon("true");
		ConeAngle("30");
		ForceForwardDir("true");
		AdditionalRange("1");
    }
    AttackPreset("volatile_attack_UV")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        UseWeapon("false");
        ImpactDirCalculation("SNAPPED");
		DamageReactionFlagInterrupt("true");
		DamagePreset("gentle_push@ai_damage_presets.scr");
    }
	AttackPreset("volatile_jump_grab")
    {
        Type("GRAB");
        Severity("HEAVY");
        MoveLimit("false");
        DamageReactionFlagInterrupt("true");
        SyncActionGroupName("VolatileGrab");
        UseWeapon("true");
    }
	
    AttackPreset("volatile_push_allies")
    {
        Type("PUSH_ALLY");
        Severity("LIGHT");
        MoveLimit("false");
        CanDamageAllies("true");
        UseWeapon("true");
		DamagePreset("gentle_push@ai_damage_presets.scr");
    }
    //// WALTZ PROTOTYPES /////
    AttackPreset("waltz_combo")
    {
        Type("LEFT_ARM_STRIKE");
		Hand("RIGHT");
        Severity("LIGHT");
        MoveLimit("true");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("false");
        DamagePreset("waltz_combo@ai_damage_presets.scr");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.5");
    }
    AttackPreset("waltz_counter")
    {
        Type("COUNTER");
		Hand("RIGHT");
        Severity("LIGHT");
        MoveLimit("true");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("false");
        DamagePreset("waltz_combo@ai_damage_presets.scr");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.5");
    }
    AttackPreset("waltz_aoe_heavy")
    {
        Type("AOE");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("true");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        VerticalRange("0.75");
        AdditionalRange("3.0");
    }
    AttackPreset("waltz_horizontal_heavy")
    {
        Type("HORIZONTAL_ATTACK");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("true");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("1.25");
        ConeAngle("15");
    }

    AttackPreset("waltz_vertical_heavy")
    {
        Type("VERTICAL_ATTACK");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("true");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamageBoxWidth("1.75");
        AdditionalRange("0.1");
        RangeOffsetEachSecond("12.5");
        
    }   
    AttackPreset("waltz_vertical_combo")
    {
        Type("SHOCKWAVE");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("true");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        ForceForwardDir("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        DamageBoxWidth("1.75");
        AdditionalRange("0.1");
        RangeOffsetEachSecond("12.5");
        
    }   
    AttackPreset("waltz_stomp")
    {
        Type("STOMP_ATTEMPT");
		Hand("RIGHT");
        DamageType("BLAST_SPECIAL");
        Severity("HEAVY");
        MoveLimit("true");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("179");
        VerticalRange("0.2");
        AdditionalRange("2.0");
        RangeOffsetEachSecond("11");
        DamagePreset("waltz_ground_pound@ai_damage_presets.scr");
    }  
    AttackPreset("waltz_fog_attack")
    {
        Type("MELEE_WEAPON");
        Severity("LIGHT");
        UseWeapon("false");
        ImpactDirCalculation("SNAPPED");
		DamageReactionFlagInterrupt("true");
        DamagePreset("waltz_light_combo@ai_damage_presets.scr");
        AdditionalRange("1.25");
    }  
     AttackPreset("waltz_fury_attack")
    {
        Type("MELEE_WEAPON");
        Severity("HEAVY");
        UseWeapon("false");
        ImpactDirCalculation("SNAPPED");
		DamageReactionFlagInterrupt("true");
        DamagePreset("waltz_combo@ai_damage_presets.scr");
        AdditionalRange("1");
    }  
    AttackPreset("waltz_block_break")
    {
        Type("USE_WEAPON");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("true");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        UseWeapon("true");
        ConeAngle("25");
        ImpactDirCalculation("TOWARDS_TARGET");
        AdditionalRange("2.75");
    } 
    AttackPreset("waltz_attack_running_low_start")
    {
        Type("CHARGE_START");
        DamageType("LOW_SLASH");
        Severity("LIGHT");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("30");
        VerticalRange("0.05");
        AdditionalRange("1.25");
		PosCorrectionOffset("-1.0 0.0 0");
        MoveLimit("false");
    }
	AttackPreset("waltz_attack_running_low")
    {
        Type("CHARGE");
        DamageType("LOW_SLASH");
        Severity("LIGHT");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("40");
        VerticalRange("0.05");
        AdditionalRange("1.25");
		PosCorrectionOffset("-1.0 0.0 0");
        MoveLimit("false");
    }
	AttackPreset("waltz_attack_running_low_end")
    {
        Type("CHARGE_END");
        DamageType("LOW_SLASH");
        Severity("LIGHT");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ConeAngle("30");
        AdditionalRange("1.75");
        MoveLimit("false");
    }
    AttackPreset("waltz_attack_jump_low")
    {
        Type("JUMP_ATTACK_FROM_MOVE");
        Severity("LIGHT");
        EnableVerticalChecks("true");
        UseWeapon("true");
		ForceForwardDir("true");
        ConeAngle("20");
        VerticalRange("1");
        AdditionalRange("1");
        MoveLimit("false");	
		DamageReactionFlagInterrupt("true");
    }
    AttackPreset("waltz_attack_heavy_forward")
    {
        Type("FINISHER");
        Severity("HEAVY");
        UseWeapon("true");
		ForceForwardDir("true");
        ConeAngle("30");
        AdditionalRange("4");
        MoveLimit("false");	
		DamageReactionFlagInterrupt("true");
        DamagePreset("waltz_heavy_combo@ai_damage_presets.scr");
    }
        
    AttackPreset("waltz_attack_small_ground_pound")
    {
        Type("PURSUIT_FAST");
		Hand("RIGHT");
        Severity("HEAVY");
        MoveLimit("false");
        DamageType("BLAST_SPECIAL");
        DamageReactionFlagInterrupt("true");
        CanDamageAllies("true");
        EnableVerticalChecks("true");
        UseWeapon("true");
        ImpactDirCalculation("TOWARDS_TARGET");
        ConeAngle("179");
        VerticalRange("0.2");
        AdditionalRange("2");
        DamagePreset("waltz_heavy_combo@ai_damage_presets.scr");
    }
}