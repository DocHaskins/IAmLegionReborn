<?xml version="1.0" encoding="UTF-8"?>
<BehaviorTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../MetaData/schema_ai.xsd" m_ContextType="ai">
    <Sequence>
        <Cnd_HasBBValue m_Key="#target"/>
        <SequenceMem>
            <Cnd_CanStartTask m_StartPolicy="DISCARD"/>
			<Cnd_CanInterruptActivityModule_Movement/>
            <Cnd_IsPoseEqual m_Pose="Standing"/>
            <Cnd_IsActivityModuleRunning_HitReaction m_Invert="true"/>
            <Selector>
                <ExternalTree m_UID="BITER_ATTACK_GRAB" m_CustomName="Grab" m_Hide="true"/>
                <SelectorMem>
					<Optional m_Enabled="$enable_charge_with_grab">
                        <ExternalTree m_UID="BITER_CHARGE_WITH_GRAB" m_CustomName="Berserker_Charge" m_Hide="true"/>
                    </Optional>
                    <ExternalTree m_UID="BITER_BERSERKER_CHARGE" m_CustomName="Berserker_Charge" m_Hide="true"/>
                    <ExternalTree m_UID="BITER_ATTACK_VS_RUNNING_PLAYER" m_CustomName="Vs_Run" m_Hide="true"/>
                    <Sequence>
                        <Cnd_IsBBValueEqual_string m_Key="#role" m_Value="melee"/>
                        <Cnd_IsCombatTargetInSyncAction m_SyncAction="BiterGrab" m_Invert="true"/>
                        <Selector>
                            <Optional m_Enabled="$tar_grabs_enabled">
                                <ExternalTree m_UID="BITER_STRAFE_WITH_GRAB" m_CustomName="Strafe_Grab" m_Hide="true"/>
                            </Optional>
                            <Optional m_Enabled="$light_attacks_enabled">
                                <ExternalTree m_UID="BITER_LIGHT_ATTACK" m_CustomName="Stand_Attack" m_Hide="true"/>
                            </Optional>
                        </Selector>
                    </Sequence>
                </SelectorMem>
                <!-- When close to the target, but cannot attack for some reason - taunt and strafe -->
                <Sequence>
                    <Selector>
                        <Sequence>
                            <Cnd_IsCombatTargetInRadius m_Radius="2.0"/>
                            <Cnd_IsCombatTargetInSyncAction/>
                        </Sequence>
                        <Sequence>
                            <Selector>
                                <Sequence>
                                    <Cnd_IsDbgBiterAggressionEqual m_AggressionLevel="0"/>
                                    <CooldownTimeDelta m_CooldownTime="10" m_StatusReturned="SUCCESS">
                                        <Opr_RandomFloat m_Result="#taunt_distance" m_RangeMin="3" m_RangeMax="15"/>
                                    </CooldownTimeDelta>
                                </Sequence>
                                <Sequence>
                                    <Cnd_IsDbgBiterAggressionEqual m_AggressionLevel="1"/>
                                    <CooldownTimeDelta m_CooldownTime="10" m_StatusReturned="SUCCESS">
                                        <Opr_RandomFloat m_Result="#taunt_distance" m_RangeMin="8" m_RangeMax="20"/>
                                    </CooldownTimeDelta>
                                </Sequence>
                                <Sequence>
                                    <Cnd_IsDbgBiterAggressionEqual m_AggressionLevel="2"/>
                                    <CooldownTimeDelta m_CooldownTime="10" m_StatusReturned="SUCCESS">
                                        <Opr_RandomFloat m_Result="#taunt_distance" m_RangeMin="20" m_RangeMax="30"/>
                                    </CooldownTimeDelta>
                                </Sequence>
                            </Selector>
                            <Cnd_IsCombatTargetInRadius m_Radius="#taunt_distance"/>
                            <Selector>
                                <Cnd_IsBBValueEqual_string m_Key="#role" m_Value="melee" m_Invert="true"/>
                                <Cnd_HasPathToCombatTarget m_Invert="true"/>
                            </Selector>
                        </Sequence>
                    </Selector>
                    <RunUntilFailure>
                        <Selector>
                            <Sequence>
                                <Cnd_IsCombatTargetInAngle m_Angle="$combat_max_angle"/>
                                <Opr_SetDirCorrectionSpeed m_MaxSpeed="50"/>
                                <SelectorMem>
                                    <CooldownTimeDeltaRandom m_MinCooldownTime="1.0" m_MaxCooldownTime="4.0" m_CooldownOnAbort="true">
                                        <Act_Taunt m_Type="Normal" m_Target="#target" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT"/>
                                    </CooldownTimeDeltaRandom>
                                    <Act_Step m_Type="COMBAT" m_Direction="LEFT" m_Target="#target" m_StartPolicy="WAIT" m_AbandonPolicy="INTERRUPT"/>
                                </SelectorMem>
                            </Sequence>
                            <SequenceMem>
                                <Cnd_IsCombatTargetInRadius m_Radius="#taunt_distance"/>
                                <Cnd_IsCombatTargetInAngle m_Angle="$combat_max_angle" m_Invert="true"/>
                                <Act_TurnToPos m_Position="#target_pos" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT"/>
                            </SequenceMem>
                        </Selector>
                    </RunUntilFailure>
                </Sequence>
                <!-- No attacks possible - move towards target-->
                <Selector>
                    <SequenceMem>
                        <Cnd_IsCombatTargetInRadius m_Radius="3.5"/>
                        <Cnd_IsActivityModuleRunning_Movement m_Invert="true"/>
                        <Cnd_IsCombatTargetInAngle m_Angle="$combat_max_angle" m_Invert="true"/>
                        <Act_TurnToPos m_Position="#target_pos" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT"/>
                    </SequenceMem>
                    <Selector>
                        <Sequence>
                            <Cnd_IsTargetClimbing m_Target="#target" m_Invert="true"/>
                            <Cnd_IsCombatTargetInRadius m_Radius="4.0" m_Invert="true"/>
                            <Cnd_HasPathToCombatTarget/>
                            <Act_Move m_Destination="#target_pos" m_LocomotionSpeed="#degenerated_speed" m_MoveStyle="#move_style" m_StopAtDest="false" m_FailIfDestUnreachable="false" m_MaxDistOutsideNavmeshXZ="2" m_MaxDistOutsideNavmeshY="2" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
                        </Sequence>
                    </Selector>
                </Selector>
            </Selector>
        </SequenceMem>
    </Sequence>
</BehaviorTree>
