<?xml version="1.0" encoding="UTF-8"?>
<BehaviorTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../MetaData/schema_ai.xsd" m_ContextType="ai">
    <RepeatOnceOnSuccess>
        <Selector>
            <SequenceMem>
                <Cnd_HasBBValue m_Key="#target"/>
                <Selector>
                    <Optional m_Enabled="$taunt_on_start">
                        <CooldownTimeDelta m_CooldownTime="500.0">
                            <SequenceMem>
                                <Cnd_TargetInAngle m_Target="#target" m_Angle="60"/>
                                <Opr_SetDirCorrectionSpeed m_MaxSpeed="60"/>
                                <Act_Taunt m_Type="NONE" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="ON_END" m_Target="#target"/>
                            </SequenceMem>
                        </CooldownTimeDelta>
                    </Optional>
                    <SelectorMem>
                        <Optional m_Enabled="$slam_enabled">
                            <ExternalTree m_UID="DEMOLISHER_SLAM" m_CustomName="Slam" m_Hide="true"/>
                        </Optional>
                        <Optional m_Enabled="$throw_zombie_enabled">
                            <ExternalTree m_UID="DEMOLISHER_THROW_ZOMBIE" m_CustomName="Throw_Zombie" m_Hide="true"/>
                        </Optional>
                        <Optional m_Enabled="$charge_enabled">
                            <ExternalTree m_UID="DEMOLISHER_CHARGE" m_CustomName="Charge" m_Hide="true"/>
                        </Optional>
                        <Optional m_Enabled="$shockwave_enabled">
                            <ExternalTree m_UID="DEMOLISHER_SHOCKWAVE" m_CustomName="Shockwave" m_Hide="true"/>
                        </Optional>
                        <Optional m_Enabled="$spit_enabled">
                            <ExternalTree m_UID="DEMOLISHER_ATTACK_SPIT" m_CustomName="Spit" m_Hide="true"/>
                        </Optional>
                        <Optional m_Enabled="$throw_enabled">
                            <ExternalTree m_UID="DEMOLISHER_THROW" m_CustomName="Throw" m_Hide="true"/>
                        </Optional>
                        <Optional m_Enabled="$pounce_enabled">
                            <ExternalTree m_UID="DEMOLISHER_POUNCE" m_CustomName="Slam" m_Hide="true"/>
                        </Optional>
                        <Optional m_Enabled="$berserker_attacks_enabled">
                            <ExternalTree m_UID="DEMOLISHER_BERSERKER_ATTACK" m_CustomName="Slam" m_Hide="true"/>
                        </Optional>
                        <Optional m_Enabled="$attacks_enabled">
                            <ExternalTree m_UID="DEMOLISHER_ATTACK" m_CustomName="Attack" m_Hide="true"/>
                        </Optional>
                        <ExternalTree m_UID="DEMOLISHER_THROW_OUT_OF_REACH" m_CustomName="Out_Of_Reach" m_Hide="true"/>
                    </SelectorMem>
                    <Sequence>
                        <Cnd_HasBBValue m_Key="#target"/>
                        <Opr_SetBBValue_string m_Key="#move_style" m_Value="Walk"/>
                        <Opr_SetBBValue_string m_Key="#move_sound_type" m_Value="walk"/>
                        <Selector m_Hide="true">
                            <CooldownTimeDelta m_CooldownTime="15.0">
                                <SequenceMem>
                                    <Cnd_TargetInRadius m_Target="#target" m_Radius="25"/>
                                    <Cnd_TargetInRadius m_Target="#target" m_Radius="6" m_Invert="true"/>
                                    <Cnd_TargetInAngle m_Target="#target" m_Angle="75"/>
                                    <Opr_SetDirCorrectionSpeed m_MaxSpeed="60"/>
                                    <Act_Taunt m_Type="NONE" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="ON_END" m_Target="#target"/>
                                </SequenceMem>
                            </CooldownTimeDelta>
                            <SequenceMem>
                                <Selector>
                                    <Cnd_TargetInRadius m_Target="#target" m_Radius="$attack_max_range"/>
                                    <Cnd_HasPathToCombatTarget m_Invert="true"/>
                                </Selector>
                                <Cnd_TargetInAngle m_Target="#target" m_Angle="$attack_max_angle" m_Invert="true"/>
                                <Act_TurnToPos m_Position="#target_pos"  m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
                            </SequenceMem>
                            <Sequence>
                                <Selector>
                                    <Cnd_TargetInRadius m_Target="#target" m_Radius="$attack_max_range"/>
                                    <Sequence>
                                        <Cnd_HasPathToCombatTarget m_Invert="true"/>
                                        <Cnd_TargetInRadius m_Target="#target" m_Radius="$throw_rubble_min_range"/>
                                    </Sequence>
                                    <Act_Move m_Destination="#target_pos" m_MoveStyle="#move_style" m_StopAtDest="false" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
                                </Selector>
                            </Sequence>
                            <Act_Idle m_Type="Stand" m_StartPolicy="WAIT" m_AbandonPolicy="BLENDOUT"/>
                        </Selector>
                    </Sequence>
                </Selector>
            </SequenceMem>
            <SequenceMem>
                <Cnd_DamageTaken />
                <Cnd_HasBBValue m_Key="#target" m_Invert="true"/>
                <Opr_GetLastAssassin m_Assasin="#assassin"/>
                <Opr_GetObjectPosition m_Object="#assassin" m_Position="#attack_position"/>
                <Act_TurnToPos m_Position="#attack_position" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
            </SequenceMem>
        </Selector>
    </RepeatOnceOnSuccess>
</BehaviorTree>
