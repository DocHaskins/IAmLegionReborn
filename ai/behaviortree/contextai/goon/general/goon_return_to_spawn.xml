<?xml version="1.0"?>
<BehaviorTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../MetaData/schema_ai.xsd" m_ContextType="ai">
<SequenceMem>
        <Cnd_HasBBValue m_Key="#target" m_Invert="true"/>
        <InvestigatePOI m_Position="#poi_position" m_Type="#poi_type" m_Owner="#poi_owner" m_NoiseEffect="#noise_effect" m_NoiseRange="#noise_range" m_IsActive="#poi_active">
            <SelectorMem>
                <SequenceMem m_CustomName="SuspiciousEnemy" m_Hide="true">
                    <Cnd_IsBBValueEqual_EPOIType m_Key="#poi_type" m_Value="Enemy"/>
                    <ExposeLogicState m_ExposedState="detecting_target">
                      <Act_Investigation m_Type="NOTICE" m_StimulusType="SIGHT" m_StimulusPosition="#poi_position" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
                    </ExposeLogicState>
                </SequenceMem>
                <SequenceMem m_CustomName="Sight" m_Hide="true">
                    <Cnd_IsBBValueEqual_EPOIType m_Key="#poi_type" m_Value="Sight"/>
                    <Cnd_IsAlertLevelEqual m_AlertLevel="High" m_Invert="true"/>
                    <ExposeLogicState m_ExposedState="detecting_target">
                        <TimeDeltaLimit m_TimeMax="3.0" m_StatusReturned="SUCCESS">
                            <Act_Investigation m_Type="NOTICE" m_StimulusType="SIGHT" m_StimulusPosition="#poi_position" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
                        </TimeDeltaLimit>
                    </ExposeLogicState>
                </SequenceMem>
                <SequenceMem m_CustomName="Attack" m_Hide="true">
                    <Cnd_IsBBValueEqual_EPOIType m_Key="#poi_type" m_Value="Attack"/>
                    <Act_TurnToPos m_Position="#poi_position" m_Type="Combat" m_StartPolicy="DISCARD" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
                    <Selector>
                        <Cnd_IsAlertLevelEqual m_AlertLevel="Low"/>
                        <Act_Investigation m_Type="NOTICE" m_StimulusType="ATTACK" m_StimulusPosition="#poi_position" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="ON_END"/>
                    </Selector>
                    <Act_Move m_Destination="#poi_position" m_IsAvoidanceActive="$use_avoidance" m_MoveStyle="Walk" m_AvoidRegionsPreset="$avoid_regions_preset" m_StopAtDest="true" m_StartPolicy="DISCARD" m_AbandonPolicy="BLENDOUT"/>
                    <TimeDeltaLimit m_TimeMax="3.0" m_StatusReturned="SUCCESS">
                        <Act_Investigation m_Type="NOTICE" m_StimulusType="NONE" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="ON_END"/>
                    </TimeDeltaLimit>
                </SequenceMem>
                <SequenceMem m_CustomName="Flashlight" m_Hide="true">
                    <Cnd_IsBBValueEqual_EPOIType m_Key="#poi_type" m_Value="Flashlight"/>
                    <ExposeLogicState m_ExposedState="checking_low_prio_poi">
                        <SequenceMem>
                            <Act_Investigation m_StimulusPosition="#poi_position" m_Type="NOTICE" m_StimulusType="FLASHLIGHT" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
                            <Act_Move m_Destination="#poi_position" m_IsAvoidanceActive="$use_avoidance" m_MoveStyle="Walk" m_AvoidRegionsPreset="$avoid_regions_preset" m_StopAtDest="true" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
                        </SequenceMem>
                    </ExposeLogicState>
                </SequenceMem>
                <SequenceMem m_CustomName="Noise" m_Hide="true">
                    <Selector>
                        <Cnd_IsBBValueEqual_EPOIType m_Key="#poi_type" m_Value="LowPrioNoise"/>
                        <Cnd_IsBBValueEqual_EPOIType m_Key="#poi_type" m_Value="HighPrioNoise"/>
                    </Selector>
                    <Selector>
                        <SequenceMem m_CustomName="Repel" m_Hide="true">
                            <Cnd_IsBBValueEqual_EPOIEffect m_Key="#noise_effect" m_Value="REPEL"/>
                            <Cnd_PositionInRadius m_Radius="#noise_range" m_Position="#poi_position"/>
                            <Opr_CloneBBValue m_KeySrc="#noise_range" m_KeyDst="#repel_end_range"/>
                            <Opr_IncrementBBValue_float m_Key="#repel_end_range" m_Amount="3"/>
                            <SelectorMem>
                                <Cnd_IsHoldRequired/>
                                <Cnd_IsDefendRequired/>
                                <Selector>
                                    <Cnd_PositionInRadius m_Radius="#repel_end_range" m_Position="#poi_position" m_Invert="true"/>
                                    <Cnd_IsBBValueEqual_bool m_Key="#poi_active" m_Value="true" m_Invert="true"/>
                                    <SelectorMem>
                                        <SequenceMem>
                                            <Cnd_IsBBValueEqual_EPOIType m_Key="#poi_type" m_Value="HighPrioNoise"/>
                                            <Act_Move m_Destination="#poi_position" m_MoveStyle="#move_style_trot" m_MoveAwayFromEndPosition="true" m_IsAvoidanceActive="$use_avoidance" m_StartPolicy="WAIT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="ON_END"/>
                                        </SequenceMem>
                                        <Act_Move m_Destination="#poi_position" m_MoveStyle="#move_style_walk" m_MoveAwayFromEndPosition="true" m_IsAvoidanceActive="$use_avoidance" m_StartPolicy="WAIT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="ON_END"/>
                                    </SelectorMem>
                                </Selector>
                            </SelectorMem>
                            <TimeDeltaLimit m_TimeMax="0.5" m_StatusReturned="SUCCESS">
                                <Act_Idle m_Type="Stand" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT"/>
                            </TimeDeltaLimit>
                            <Opr_RemoveBBValue m_Key="#repel_end_range"/>
                        </SequenceMem>
                        <SequenceMem m_CustomName="Attract/Notice" m_Hide="true">
                            <Cnd_IsBBValueEqual_EPOIEffect m_Key="#noise_effect" m_Value="REPEL" m_Invert="true"/>
                            <Selector>
                                <Cnd_IsBBValueEqual_bool m_Key="#searching" m_Value="true"/>
                                <Sequence>
                                    <Cnd_HasBBValue m_Key="#last_target" m_Invert="true"/>
                                    <Cnd_HasBBValue m_Key="#group_target" m_Invert="true"/>
                                </Sequence>
                                <Cnd_IsBBValueEqual_EPOIType m_Key="#poi_type" m_Value="HighPrioNoise"/>
                            </Selector>
                            <ExposeLogicState m_ExposedState="checking_high_prio_poi">
                                <SequenceMem>
                                    <Selector>
                                        <Cnd_IsAlertLevelEqual m_AlertLevel="High"/>
                                        <Act_Investigation m_Type="NOTICE" m_StimulusType="NOISE" m_StimulusPosition="#poi_position" m_StartPolicy="INTERRUPT" m_AbandonPolicy="BLENDOUT" m_DecisionPolicy="ON_END"/>
                                    </Selector>
                                    <Opr_RandomFloat m_Result="#randomized_end_radius" m_RangeMin="8.5" m_RangeMax="10"/>
                                    <Sequence>
                                        <Selector>
                                            <Cnd_ShouldInspectCurrentPOI m_Invert="true"/>
                                            <SelectorMem>
                                                <Cnd_PositionInRadius m_Radius="#randomized_end_radius" m_Position="#poi_position"/>
                                                <Act_Move m_Destination="#poi_position" m_EndRadius="#randomized_end_radius" m_IsAvoidanceActive="$use_avoidance" m_AvoidRegionsPreset="$avoid_regions_preset" m_MoveStyle="Walk" m_StopAtDest="true" m_StartPolicy="DISCARD" m_AbandonPolicy="BLENDOUT"/>
                                            </SelectorMem>
                                        </Selector>
                                        <Selector>
                                            <Cnd_IsBBValueEqual_bool m_Key="#poi_active" m_Value="true" m_Invert="true"/>
                                            <Act_Idle m_Type="Stand" m_StartPolicy="DISCARD" m_AbandonPolicy="BLENDOUT"/>
                                        </Selector>
                                    </Sequence>
                                </SequenceMem>
                            </ExposeLogicState>
                        </SequenceMem>
                    </Selector>
                </SequenceMem>
            </SelectorMem>
        </InvestigatePOI>
        <Selector m_Hide="true">
            <Cnd_HasBBValue m_Key="#poi_position" m_Invert="true"/>
            <Sequence>
                <Opr_RemoveBBValue m_Key="#poi_active"/>
                <Opr_RemoveBBValue m_Key="#noise_effect"/>
            </Sequence>
        </Selector>
    </SequenceMem>
</BehaviorTree>
