<?xml version="1.0"?>
<BehaviorTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../../MetaData/schema_ai.xsd" m_ContextType="ai">
    <SequenceMem>
        <Cnd_IsTargetInAir m_Target="#target" m_Invert="true"/>
        <Cnd_IsCombatTargetInRange m_Radius="$attack_quick_max_range" m_Angle="$attack_quick_max_angle"/>
        <Cnd_IsCombatTargetMeleeReachable/>
        <Cnd_AllyInLineOfFire m_Target="#target" m_CheckMelee="true" m_SpaceNeeded="$attack_min_space" m_Invert="true"/>
        <Optional m_Enabled="$attack_quick_step_enabled">
            <SelectorMem>
                <Cnd_IsCombatTargetInRadius m_Radius="$attack_quick_step_min_range"/>
                <Cnd_InTargetHorzAngle m_Target="#target" m_Angle="30" m_Invert="true"/>
                <Cnd_AllyInLineOfFire m_Target="#target" m_CheckMelee="true" m_SpaceNeeded="$attack_quick_step_min_occluded_space" m_Invert="true"/>
                <SequenceMem>
                    <Selector>
                        <Sequence>
                            <Cnd_OnLeftOfTarget m_Target="#target"/>
                            <Cnd_SpaceInSimpleDirection m_Direction="RIGHT" m_MinRequiredSpace="$enviro_space_required" m_CheckHalfAngle="$enviro_space_half_angle"/>
                            <Opr_SetBBValue_EStepDirection m_Key="#step_direction" m_Value="RIGHT"/>
                        </Sequence>
                        <Sequence>
                            <Cnd_OnLeftOfTarget m_Target="#target" m_Invert="true"/>
                            <Cnd_SpaceInSimpleDirection m_Direction="LEFT" m_MinRequiredSpace="$enviro_space_required" m_CheckHalfAngle="$enviro_space_half_angle"/>
                            <Opr_SetBBValue_EStepDirection m_Key="#step_direction" m_Value="LEFT"/>
                        </Sequence>
                        <Sequence>
                            <Cnd_IsCombatTargetInRadius m_Radius="$attack_quick_step_forward_min_range" m_UsePrediction="true" m_Invert="true"/>
                            <Opr_SetBBValue_EStepDirection m_Key="#step_direction" m_Value="FORWARD"/>
                        </Sequence>
                    </Selector>
                    <Opr_SetDirCorrectionSpeed m_MaxSpeed="$step_dir_correction_speed"/>
                    <Act_Step m_Direction="#step_direction" m_Type="ATTACK" m_Style="Aggressive" m_Target="#target" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
                </SequenceMem>
            </SelectorMem>
        </Optional>
        <Opr_SetDirCorrectionSpeed m_MaxSpeed="$attack_quick_dir_correction_speed"/>
        <Opr_SetPosCorrectionSpeed m_MaxSpeed="$attack_pos_correction_speed"/>
        <SetFlagOnRunning m_Key="#can_attack_recoil">
            <Act_Attack m_AttackPresetName="human_1h_step" m_Target="#target" m_EnablePosCorrection="$enable_attack_pos_correction" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
        </SetFlagOnRunning>
        <Optional m_Enabled="$enable_attack_step_back">
            <SelectorMem>
                <Cnd_IsCombatTargetInRadius m_Radius="$attack_quick_step_escape_max_range" m_Invert="true"/>
                <Cnd_SpaceInSimpleDirection m_Direction="BACKWARD" m_Invert="true" m_MinRequiredSpace="$enviro_space_required" m_CheckHalfAngle="$enviro_space_half_angle"/>
                <SequenceMem>
                    <Opr_SetDirCorrectionSpeed m_MaxSpeed="$step_dir_correction_speed"/>
                    <Act_Step m_Direction="BACKWARD" m_Type="ESCAPE" m_Style="Aggressive" m_Target="#target" m_StartPolicy="INTERRUPT" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
                </SequenceMem>
            </SelectorMem>
        </Optional>
    </SequenceMem>
</BehaviorTree>
