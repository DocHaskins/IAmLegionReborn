<?xml version="1.0"?>
<BehaviorTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../../MetaData/schema_ai.xsd" m_ContextType="ai">
    <SequenceMem>
        <Cnd_IsTargetInAir m_Target="#target" m_Invert="true"/>
        <Cnd_IsCombatTargetInRange m_Radius="$attack_power_overhead_max_range" m_Angle="$attack_power_overhead_max_angle"/>
        <Cnd_IsCombatTargetMeleeReachable/>
        <Cnd_AllyInLineOfFire m_Target="#target" m_CheckMelee="true" m_SpaceNeeded="$attack_min_space" m_Invert="true"/>
        <Opr_SetDirCorrectionSpeed m_MaxSpeed="$attack_power_overhead_recovery_dir_correction_speed"/>
        <Opr_SetPosCorrectionSpeed m_MaxSpeed="$attack_pos_correction_speed"/>
        <Opr_SetBBValue_bool m_Key="#trigger_overhead_recovery" m_Value="false"/>
        <Parallel m_PolicySuccess="REQUIRE_ONE" m_PolicyFailure="REQUIRE_ONE">
            <Act_Attack m_Target="#target" m_AttackPresetName="human_2h_recovery_combo" m_Phase="1" m_EnablePosCorrection="$enable_attack_pos_correction" m_StartPolicy="DISCARD" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
            <RunUntilSuccess>
                <BlackboardSwitch m_Enabled="#enable_attack_power_overhead_recovery">
                    <Sequence>
                        <Cnd_CanAttackCombo/>
                        <Cnd_HasCombatTargetNoControl m_Invert="true"/>
                        <Cnd_IsCombatTargetInRange m_Radius="$attack_power_recovery_max_range" m_Angle="$attack_power_recovery_max_angle"/>
                        <Opr_SetBBValue_bool m_Key="#trigger_overhead_recovery" m_Value="true"/>
                    </Sequence>
                </BlackboardSwitch>
            </RunUntilSuccess>
        </Parallel>
        <Succeeder>
            <Starter m_Key="#trigger_overhead_recovery">
                <Act_Attack m_Target="#target" m_AttackPresetName="human_2h_recovery_combo" m_Phase="0" m_EnablePosCorrection="$enable_attack_pos_correction" m_StartPolicy="DISCARD" m_AbandonPolicy="INTERRUPT" m_DecisionPolicy="WHEN_POSSIBLE"/>
            </Starter>
        </Succeeder>
    </SequenceMem>
</BehaviorTree>
