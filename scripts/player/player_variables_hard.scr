import "player_variables.scr"
import "ial_settings.mth"
sub PlayerVariables()
{
    use main();

    Param("PlayerDamageVulnerability", "Player_DamageVulnerability_Hard");
    Param("PlayerFallDamageVulnerability", "Player_FallDamageVulnerability_Hard");

    Param("WeaponStaminaUsageMul", "1.5");
    Param("StaminaRegenerationMul", "0.75");

    Param("PerfectBlockTimingEnd", "0.15");

    Param("HealthRegenerationMaxLevel", "HealthRegenerationMaxLevel_Hard");
    //Param("HealthRegenerationMul", "DefaultRegenHardMul");
	Param("HealthCriticalLevel", "0.25");
	Param("MaxAutoRegenHealthPercent", "25");
	Param("LowHealthEffectThreshold", "0.95");                // Defines the value of health when critical health post process is working, based on HealthCriticalLevel
    Param("HealthRegenerationDelay", "10.0");
	
	Param("ActiveLandingMaxInputTime", "0.2");
    Param("ActiveLandingMinInputTime", "0.5");
	
	Param("BlockHeavyAttackStaminaCost", "0.25");
	
	Param("DifficultySyncActionDamageMul", "1.5");
    Param("DifficultyItemDamageMul", "1.5");	
	Param("DifficultyRangedHeadDamageMul", "1.5");
	Param("SpecialMoveAbusePenaltyCount", "1.0"); // max time the AI will avoid the move
	Param("DropAttackMaxFallHeight", "15.0"); // block using jump attack after faling from 15 meters
	
	//IAL CHANGES
	Param("FirearmsCrossbowAccuracyFactor", "IAL_Crossbow_Sway");
    Param("BowAccuracyFactor", "IAL_Bow_Sway");
    Param("BowStaminaShoot", "IAL_Bow_Stamina_OnFire");
    Param("BowStaminaChargingPerSecond", "IAL_Bow_Stamina_Charging");
	Param("BowChargeDamageMul", "Player_BowChargeDamageMul");
    Param("BowZoomValue", "IAL_Bow_Zoom_Amount");
	Param("BowPenetrationEnabled", IAL_Bow_Arrow_Penetration);
    Param("BowMinReadyTimeToShoot", "IAL_Bow_TimeBeforeShoot");
	Param("BowAutoReleaseTime", "IAL_Bow_TimeBeforeAutoRelease");	
	
	Param("NightExpActionsReward", "IAL_Night_XP_Actions_Reward");
    Param("NightExpLootedReward", "IAL_Night_XP_Looted_Reward");
    Param("NightExpUnspotedReward", "IAL_Night_XP_Unspotted_Reward");
    Param("NightExpKillReward", "IAL_Night_XP_Combat_Reward");
	
	//Survivor sense	
	Param("CanUseSenseWhenMoving", IAL_SurvivorSense_WhileMoving);
	Param("SurvivorSenseCooldown", "IAL_SurvivorSense_Cooldown"); // sensor rest time in seconds   
	
	//NIGHT INFECTION
	Param("AntizinChangePerSecond", "0.0");
    Param("AntizinPercentageChangePerSecond", "0.0");	
	Param("InfectionPostprocessMaxValue", "0.7");
    Param("InfectionChangePerSecond", "0.0");
    Param("InfectionPercentageChangePerSecond", "0.0");
    Param("PlayersAntizinCapacity", "3.0");
    Param("PlayersAntizinCapacityCombatBoost", "0.0");
    Param("PlayersAntizinCapacityParkourBoost", "0.0");
    Param("AntizineValueToShoUVLightsLocations", "0.4"); //when antizin lvl is <= this value uv light locations show up on radar (value is the same units as PlayersAntizinCapacity
	
	// Visual
    Param("SurvivorSenseRange",        "IAL_SurvivorSense_Range"); // Range of visualization of sonar 
    Param("SurvivorSenseOpacity",      "IAL_SurvivorSense_Opacity"); // Strength of visual effect set in range 0.0 - 1.0. It is a global variable that affects all visualizations. If you want to control the intensity of the effect per object/AI type use AlphaMax and AlhpaMin in survivor_sense_presets.scr
    Param("SurvivorSenseAIDuration",   "IAL_SurvivorSense_DetectionTime_AI"); // how long AIs will be highlited

		// detection ranges for AIs:
	Param("SurvivorSenseAIRange", "IAL_SurvivorSense_Range"); // range of detecting active AI
	
		// Gui related
	Param("SurvivorSenseEnemyBehindPlayerMaxDistance", "IAL_SurvivorSense_DetectionTime_BehindPlayer"); //maximum distance where enemies behind player are detected while using survivor sense

	Param("EnemyBehindPlayerMaxDistance", "IAL_SurvivorSense_DetectionTime_BehindPlayer"); //maximum distance where enemies behind player are detected
        
	// Simulation sickness test
    Param("FovSprintModif", "IAL_Run_FOV_Focus");
    Param("SplatsEnabled", "IAL_Run_VisualEffects");
    Param("HeadBobFactor", "IAL_Run_Headbob");    
    Param("SpeedFxEnabled", "IAL_Run_VisualEffects");

	Param("BowDisableAimingOnReloadAndCancel", "IAL_Bow_Zoom_DisableOnReload");

    Param("HarvestingLevelForMultipleItems", "IAL_Loot_MultipleItems_LVL");            // since this level player will get multipple items
    Param("HarvestingMultipleItemsCount", "IAL_Loot_MultipleItems_Amount");

	Param("InVisibleToEnemies", "IAL_GhostMode");
    Param("CamouflageCanRun", "IAL_Camo_Actions_CanRun");
    Param("CamouflageCanAttack", "IAL_Camo_Actions_CanAttack");
    Param("CamouflageDepletionAddFlashlightDay", "IAL_Camo_RemoveRate_Flashlight");
    Param("CamouflageDepletionAddFlashlightNight", "IAL_Camo_RemoveRate_Flashlight");
    Param("CamouflageDepletionAddClimbing", "IAL_Camo_RemoveRate_Climbing");
    Param("CamouflageDepletionAddInWater", "IAL_Camo_RemoveRate_Water");
    Param("CamouflageDepletionAddInAir", "IAL_Camo_RemoveRate_AirTime");
    Param("CamouflageLooseOnShoot", "IAL_Camo_RemoveRate_Shoot");
	
    Param("MaxStamina", "IAL_Player_Stamina");
    Param("MaxStaminaMinRegenerationTime", "IAL_Player_Stamina_Regen_Min");    
	Param("MaxStaminaMaxRegenerationTime", "IAL_Player_Stamina_Regen_Max");
    Param("MaxStaminaTimeToRegenerate", "IAL_Player_Stamina_Regen_TimeTo");
    Param("MaxStaminaDrainFactor", "IAL_Player_Stamina_Drain_Rate");
    Param("MaxStaminaDrainEnabled", "IAL_InfiniteStamina");
    Param("MinStaminaLevelFromHit", "IAL_Player_Stamina_Drain_FromHit");
    Param("StaminaTimeToRegenerateOnEmpty", "IAL_Player_Stamina_Regen_TimeTo");
    Param("StaminaTimeToRegenerateOnEmptyAfterParokur", "IAL_Player_Stamina_Regen_TimeTo");          // NOT WORKING IN COMBAT  -time needed to fully restore stamina when completely depleted
    Param("StaminaTimeToRegenerate", "IAL_Player_Stamina_Regen_TimeTo");                 // time after which stamina starts to regenerate if player still has some stamina left
    Param("StaminaTimeToRegenerateAfterParkour", "IAL_Player_Stamina_Regen_TimeTo");     // time after which stamina starts to regenerate if player still has some stamina left
    Param("StaminaRegeneration", "IAL_Player_Stamina_Regen_Max");                    // WARNING CHANGED SO EVERY THING IS IN SECONDS rate at which stamina regenerates in seconds to full bar!!
	Param("StaminaRegenerationOutsideDanger", "IAL_Player_Stamina_Regen_Max");
    Param("StaminaRegenerationFactorSlow", "0.3");               // factor when running or being on ladder

	Param("MoveSprintStaminaConsumption", "0.0075");
    Param("XrayEffectProbability", "IAL_XRAY_Chance");
    Param("SlowMoProbability", "IAL_Slowmo_Chance");
	Param("SlowMoLastGroupTime", "IAL_Slowmo_Cooldown");
	Param("GroupOfEnemiesCount", "IAL_Group_Enemies_Max");	
    Param("ZipLineMinSpeed", "IAL_ZiplineSpeed_Min");
    Param("ZipLineMaxSpeed", "IAL_ZiplineSpeed_Max");
	
	Param("MeleeVerticalPhysicalDamageMul", "IAL_Combat_StandingOver_DmgMulti");
	Param("MeleeBluntRagdollEveryXHit", "IAL_Combat_Blunt_ForceRagdoll_NumberOfHits");
    // KICK STAMINA USAGE
    Param("KickStaminaUsage", "0.05");
    // WRESTLING KICK
    Param("AirKickBaseDamageMul", "Player_AirKickBaseDamageMul");
    Param("AirKickPhysicsDamage", "IAL_Combat_AirKick_PhysicsDmg");
	
	Param("ItemsInventorySize", "IAL_Inventory_Size"); //limited max is 100
    Param("MaxInventorySize", "IAL_Inventory_Size");

	Param("StorageEquipmentSlotsCount", "IAL_Storage_Size");
    Param("StorageConsumamblesSlotsCount", "IAL_Storage_Size");
    Param("StorageOtherSlotsCount", "IAL_Storage_Size");
	
	Param("MovingStaminaRegenFactor", "IAL_Player_Stamina_Regen_Rate_Running");
 
 	Param("HealthBarTimeToShowAfterHit", "IAL_HealthBar_ShowHit");
	Param("HealthBarTimeToShowAfterMainTarget", "IAL_HealthBar_ShowHit");	
	Param("HealthBarsMaxRange", "IAL_HealthBar_ShowRange");
	
	Param("AIDamageResistance", "IAL_AI_Damage_Resistance");
    Param("AIDamageVulnerability", "IAL_AI_Damage_Vulnerability");
	Param("DayDamageMulFactor", "IAL_AI_Daytime_Dmg_Multiplier");
    Param("NightDamageMulFactor", "IAL_AI_Nighttime_Dmg_Multiplier");
	
	Param("AggresionPerHit", "0.75");
	
	Param("InfiniteArrows", "IAL_Bow_Arrow_Unlimited");
}